<Window x:Class="Project.Login.HomeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:Project.Login"
        xmlns:ff="clr-namespace:Project.Login"
        mc:Ignorable="d"
        Title="HomeWindow" Height="310" Width="520" ResizeMode="CanMinimize">
    <Grid>

        <Grid.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,2,40,2" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                    </TextBlock>
                                </Border>
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                    <Border BorderBrush="red" BorderThickness="1" />
                                </AdornedElementPlaceholder>
                                <!--<AdornedElementPlaceholder x:Name="textBox"/>
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>-->
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,2,40,2" />
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="true">
                                <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                    <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                    </TextBlock>
                                </Border>
                                <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                    <Border BorderBrush="red" BorderThickness="1" />
                                </AdornedElementPlaceholder>
                                <!--<AdornedElementPlaceholder x:Name="textBox"/>
                                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>-->
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>

        <Grid.Background>
            <ImageBrush ImageSource="/Project;component/Images/home.jpg" />
        </Grid.Background>

        <TextBox Text ="{Binding Username, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" 
                 Height="23" Margin="80,15,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:EventTrigger.Actions>
                        <i:InvokeCommandAction Command="{Binding LostFocusCommand }" CommandParameter="UsernameLogin" />
                    </i:EventTrigger.Actions>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <PasswordBox ff:PasswordBoxAssistant.BindPassword="true" ff:PasswordBoxAssistant.BoundPassword="{Binding Path=Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" Height="23" Margin="80,42,0,0" VerticalAlignment="Top" Width="120" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:EventTrigger.Actions>
                        <i:InvokeCommandAction Command="{Binding LostFocusCommand }" CommandParameter="PasswordLogin" />
                    </i:EventTrigger.Actions>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </PasswordBox>

        <TextBox Text ="{Binding Username2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" Height="23" Margin="80,155,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:EventTrigger.Actions>
                        <i:InvokeCommandAction Command="{Binding LostFocusCommand }" CommandParameter="UsernameRegister" />
                    </i:EventTrigger.Actions>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <PasswordBox ff:PasswordBoxAssistant.BindPassword="true" ff:PasswordBoxAssistant.BoundPassword="{Binding Path=Password2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" HorizontalAlignment="Left" Height="23" Margin="80,182,0,0" VerticalAlignment="Top" Width="120" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostFocus">
                    <i:EventTrigger.Actions>
                        <i:InvokeCommandAction Command="{Binding LostFocusCommand }" CommandParameter="PasswordRegister" />
                    </i:EventTrigger.Actions>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </PasswordBox>

        <Label Content="username:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
        <Label Content="password:" HorizontalAlignment="Left" Margin="10,40,0,0" VerticalAlignment="Top"/>
        <Label Content="username:" HorizontalAlignment="Left" Margin="10,150,0,0" VerticalAlignment="Top"/>
        <Label Content="password:" HorizontalAlignment="Left" Margin="10,180,0,0" VerticalAlignment="Top"/>

        <Button IsDefault="True" Command="{Binding LoginCommand}" Content="Sign in" Height="40" Width="60" HorizontalAlignment="Left" Margin="100,80,0,0" VerticalAlignment="Top">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <!--<Setter Property="Foreground" Value="Blue" />-->
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button IsDefault="True" Command="{Binding RegistrateCommand}" Content="Sign up" HorizontalAlignment="Left" Margin="100,215,0,0" VerticalAlignment="Top" Height="40" Width="60">
            <Button.Style>
                <Style  TargetType="{x:Type Button}">
                    <!--<Setter Property="Foreground" Value="Blue" />-->
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <ComboBox x:Name="cmb3" SelectedItem="{Binding EditRemoveWindowVM.EditCmb3SiteNameSelectedItem}" Visibility="{Binding EditRemoveWindowVM.EditCmb3Visibility, FallbackValue=Hidden, Mode=TwoWay}" ItemsSource="{Binding Client.Sites,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="315,181,0,0" VerticalAlignment="Top" Height="23" Width="120" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}mrID: {0}&#x0a;Name: {1}">
                                <Binding Path="MRID"/>
                                <Binding Path="Name"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>


    </Grid>
</Window>
